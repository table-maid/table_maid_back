<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.tableMaid.repository.SalesMapper">

    <resultMap id="salesResultMap" type="com.project.tableMaid.entity.sales.Sales">
        <id property="salesId" column="sales_id"/>
        <result property="adminId" column="admin_id"/>
        <result property="menuId" column="menu_id"/>
        <result property="orderNumber" column="order_number"/>
        <result property="menuName" column="menu_name"/>
        <result property="year" column="year"/>
        <result property="month" column="month"/>
        <result property="day" column="day"/>
        <result property="count" column="count"/>
        <result property="totalSales" column="total_sales"/>
        <result property="menuTotalPrice" column="menu_total_price"/>
        <result property="dayTotalSales" column="day_total_sales"/>
        <result property="menuTotalSales" column="menu_total_sales"/>
        <result property="menuImgUrl" column="menu_img_url"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <resultMap id="orderResultMap" type="com.project.tableMaid.entity.sales.Order">
        <id property="orderId" column="order_id"/>
        <result property="adminId" column="admin_id"/>
        <result property="orderNumber" column="order_number"/>
        <result property="tableNumber" column="table_number"/>
        <result property="peopleCount" column="people_count"/>
        <result property="menuCount" column="menu_count"/>
        <result property="menuName" column="menu_name"/>
        <result property="menuTotalPrice" column="menu_total_price"/>
        <result property="optionPrice" column="option_price"/>
        <result property="optionName" column="option_name"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <insert id="saveSales">
        insert into sales_tb
        values
        <foreach collection="sales" item="sale" separator=",">
            (0, #{sale.adminId}, #{sale.orderNumber}, #{sale.menuName},  #{sale.year}, #{sale.month}, #{sale.day}, #{sale.count}, #{sale.menuTotalPrice}, now(), now())
        </foreach>
    </insert>

    <insert id="saveOrders">
        insert into order_tb
        values
        <foreach collection="orders" item="order" separator=",">
            (0, #{order.adminId}, #{order.orderNumber}, #{order.tableNumber}, #{order.peopleCount}, #{order.menuName}, #{order.menuCount}, #{order.menuTotalPrice}, now(), now())
        </foreach>
    </insert>
    <insert id="saveRefundDetail" parameterType="com.project.tableMaid.entity.sales.Refund">
        INSERT INTO refund_tb (
            admin_id,
            refund_code,
            order_number,
            table_number,
            menu_name,
            menu_count,
            option_name,
            option_price,
            menu_total_price,
            create_date,
            update_date
        )
        VALUES (
            #{adminId},
            #{refundCode},
            #{orderNumber},
            #{tableNumber},
            #{menuName},
            #{menuCount},
            #{optionName},
            #{optionPrice},
            #{menuTotalPrice},
            NOW(),
            NOW()
            )
    </insert>

    <select
        id="findTotalSales"
        resultMap="salesResultMap"
    >
        select
            at.admin_id,
            year,
            month,
            sum(count) as count,
            sum(menu_total_price) as total_sales,
            st.create_date,
            st.update_date
        from
            sales_tb st
            left outer join admin_tb at on (at.admin_id = st.admin_id)
        where
            st.admin_id = #{adminId}
        group by
            year,
            month
        order by
            year ASC,
            month ASC
    </select>

    <select
        id="findSelectDaySales"
        resultMap="salesResultMap"
    >
        select
            at.admin_id,
            year,
            month,
            day,
            sum(menu_total_price) as day_total_sales,
            sum(count) as count,
            min(st.create_date) as create_date,
            max(st.update_date) as update_date
        from
            sales_tb st
            left outer join admin_tb at on (at.admin_id = st.admin_id)

        where
            st.admin_id = #{adminId}
        group by
            year,
            month,
            day
        order by
            year ASC,
            month ASC,
            day ASC
    </select>

    <select
            id="findMenuTotalSales"
            resultMap="salesResultMap"
    >
        select
            st.admin_id,
            st.menu_id,
            mt.menu_name,
            year,
            month,
            day,
            sum(st.count) as count,
            sum(st.menu_total_price) as menu_total_sales,
            mt.menu_img_url,
            min(st.create_date) as create_date,
            max(st.update_date) as update_date
        from
            sales_tb st
            left outer join admin_tb at on at.admin_id = st.admin_id
            left outer join menu_tb mt on mt.menu_id = st.menu_id
        where
            st.admin_id = #{adminId} and
            st.menu_id = #{menuId} and
            st.menu_id is not null and
            st.menu_id != 0
        group by
            st.admin_id,
            st.menu_id,
            mt.menu_name,
            year,
            month,
            day,
            mt.menu_img_url
        order by
            year ASC,
            month ASC,
            day ASC
    </select>

    <select
        id="findOrders"
        resultMap="orderResultMap"
    >
        select
            order_id,
            admin_id,
            order_number,
            table_number,
            people_count,
            menu_name,
            menu_count,
            menu_total_price,
            create_date,
            update_date
        from
            order_tb
    </select>
    <select id="findOrderListByAdminId" resultMap="orderResultMap">
        select
            *
        from
            order_tb
        where
            admin_id = #{adminId}

    </select>
    <select id="findOrderDetailByOrderId" resultMap="orderResultMap">
        select
            *
        from
            order_tb
        where
            admin_id = #{adminId} and
            order_number = #{orderNumber}
    </select>


    <delete id="deleteSales">
        delete
        from
            sales_tb
        where
            order_number = #{orderNumber} and admin_id = #{adminId}
    </delete>

    <delete id="deleteOrder">
        delete
        from
            order_tb
        where
            order_number = #{orderNumber} and admin_id = #{adminId}
    </delete>
    <delete id="deleteByOrderNumber">

    </delete>

</mapper>
